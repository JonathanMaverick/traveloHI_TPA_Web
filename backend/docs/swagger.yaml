definitions:
  model.Airline:
    properties:
      airlineID:
        type: integer
      airlineLogo:
        type: string
      airlineName:
        type: string
    type: object
  model.Airport:
    properties:
      airportCode:
        type: string
      airportID:
        type: integer
      airportLocation:
        type: string
      airportName:
        type: string
    type: object
  model.Facilities:
    properties:
      facilitiesID:
        type: integer
      facilitiesName:
        type: string
    type: object
  model.FlightSchedule:
    properties:
      arrivalTime:
        type: string
      businessPrice:
        type: integer
      departureTime:
        type: string
      destinationAirport:
        $ref: '#/definitions/model.Airport'
      destinationAirportID:
        type: integer
      economyPrice:
        type: integer
      flightScheduleID:
        type: integer
      originAirport:
        $ref: '#/definitions/model.Airport'
      originAirportID:
        type: integer
      plane:
        $ref: '#/definitions/model.Plane'
      planeID:
        type: integer
    type: object
  model.Hotel:
    properties:
      hotelAddress:
        type: string
      hotelCity:
        type: string
      hotelDescription:
        type: string
      hotelFacilities:
        items:
          $ref: '#/definitions/model.HotelFacilities'
        type: array
      hotelID:
        type: integer
      hotelName:
        type: string
      hotelPictures:
        items:
          $ref: '#/definitions/model.HotelPicture'
        type: array
    type: object
  model.HotelFacilities:
    properties:
      facilities:
        $ref: '#/definitions/model.Facilities'
      facilitiesID:
        type: integer
      hotelFacilitiesID:
        type: integer
      hotelID:
        type: integer
    type: object
  model.HotelPicture:
    properties:
      hotelID:
        type: integer
      hotelPicture:
        type: string
      hotelPictureID:
        type: integer
    type: object
  model.Plane:
    properties:
      airline:
        $ref: '#/definitions/model.Airline'
      airlineID:
        type: integer
      businessSeats:
        type: integer
      economySeats:
        type: integer
      planeCode:
        type: string
      planeID:
        type: integer
    type: object
  model.Room:
    properties:
      bedType:
        type: string
      hotelID:
        type: integer
      occupancy:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
      roomID:
        type: integer
      roomName:
        type: string
      roomPicture:
        items:
          $ref: '#/definitions/model.RoomPicture'
        type: array
    type: object
  model.RoomPicture:
    properties:
      roomID:
        type: integer
      roomPicture:
        type: string
      roomPictureID:
        type: integer
    type: object
  model.User:
    properties:
      dob:
        type: string
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      lastName:
        type: string
      password:
        type: string
      personalSecurityAnswer:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      securityQuestion:
        type: string
      status:
        type: string
      subscribedToNewsletter:
        type: boolean
      userID:
        type: integer
      wallet:
        type: number
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: VK TPA Website API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: TPA-Website
  version: "1.0"
paths:
  /airline:
    get:
      consumes:
      - application/json
      description: Get an airline
      parameters:
      - description: Airline
        in: body
        name: airline
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Airline found successfully!
          schema:
            type: string
      summary: Get airline
      tags:
      - Airline
    post:
      consumes:
      - application/json
      description: Add a new airline
      parameters:
      - description: Airline
        in: body
        name: airline
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Airline created successfully!
          schema:
            type: string
      summary: Add airline
      tags:
      - Airline
  /airline/plane/{airlineID}:
    get:
      consumes:
      - application/json
      description: Get a plane
      parameters:
      - description: Airline ID
        in: path
        name: airlineID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Plane found successfully!
          schema:
            type: string
      summary: Get plane by airline
      tags:
      - Plane
  /flight/airport:
    get:
      consumes:
      - application/json
      description: Get a list of airports
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Airport'
            type: array
      summary: List airports
      tags:
      - Flight
  /flight/schedule:
    get:
      consumes:
      - application/json
      description: Get a list of flight schedules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.FlightSchedule'
            type: array
      summary: List flight schedules
      tags:
      - Flight
    post:
      consumes:
      - application/json
      description: Add a new flight schedule
      parameters:
      - description: Flight Schedule
        in: body
        name: flightSchedule
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Flight schedule created successfully!
          schema:
            type: string
      summary: Add flight schedule
      tags:
      - Flight
  /hotel:
    get:
      consumes:
      - application/json
      description: Get a list of hotel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Hotel'
            type: array
      summary: List hotel
      tags:
      - Hotel
    post:
      consumes:
      - application/json
      description: Add a new hotel
      parameters:
      - description: Hotel
        in: body
        name: hotel
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hotel created successfully!
          schema:
            type: string
      summary: Add hotel
      tags:
      - Hotel
  /hotel/add_hotel_facilities:
    post:
      consumes:
      - application/json
      description: Add a new hotel facilities
      parameters:
      - description: Hotel Facilities
        in: body
        name: hotelFacilities
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hotel facilities created successfully!
          schema:
            type: string
      summary: Add hotel facilities
      tags:
      - Hotel
  /hotel/add_hotel_picture:
    post:
      consumes:
      - application/json
      description: Add a new hotel picture
      parameters:
      - description: Hotel Picture
        in: body
        name: hotelPicture
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hotel picture created successfully!
          schema:
            type: string
      summary: Add hotel picture
      tags:
      - Hotel
  /hotel/add_hotel_room:
    post:
      consumes:
      - application/json
      description: Add a new hotel room
      parameters:
      - description: Hotel Room
        in: body
        name: hotelRoom
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hotel room created successfully!
          schema:
            type: string
      summary: Add hotel room
      tags:
      - Hotel
  /hotel/facilities:
    get:
      consumes:
      - application/json
      description: Get a list of hotel facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Facilities'
            type: array
      summary: List hotel facilities
      tags:
      - Hotel
  /plane:
    get:
      consumes:
      - application/json
      description: Get all planes
      produces:
      - application/json
      responses:
        "200":
          description: Planes found successfully!
          schema:
            type: string
      summary: Get planes
      tags:
      - Plane
    post:
      consumes:
      - application/json
      description: Add a new plane
      parameters:
      - description: Plane
        in: body
        name: plane
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Plane created successfully!
          schema:
            type: string
      summary: Add plane
      tags:
      - Plane
  /plane/{planeID}:
    delete:
      consumes:
      - application/json
      description: Delete a plane
      parameters:
      - description: Plane ID
        in: path
        name: planeID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Plane deleted successfully!
          schema:
            type: string
      summary: Delete plane
      tags:
      - Plane
  /room:
    get:
      consumes:
      - application/json
      description: Get a list of rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Room'
            type: array
      summary: List rooms
      tags:
      - Room
  /room/add_hotel_room_picture:
    post:
      consumes:
      - application/json
      description: Add a new room picture
      parameters:
      - description: Room Picture
        in: body
        name: roomPicture
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Room picture created successfully!
          schema:
            type: string
      summary: Add room picture
      tags:
      - Room
  /user:
    get:
      consumes:
      - application/json
      description: Get a list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: List users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Create user
      tags:
      - User
  /user/{userId}:
    get:
      consumes:
      - application/json
      description: Get a specific user account
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Get a user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update an existing user account
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: User details
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update user
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login user
      tags:
      - User
  /user/send-newsletter:
    post:
      consumes:
      - application/json
      description: Send a newsletter to all subscribed users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Send newsletter
      tags:
      - User
swagger: "2.0"
